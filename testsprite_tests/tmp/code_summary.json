{
  "tech_stack": [
    "TypeScript",
    "Next.js 15",
    "React 19",
    "Supabase",
    "PostgreSQL",
    "JWT Authentication",
    "bcryptjs",
    "TailwindCSS",
    "Zustand",
    "Framer Motion",
    "Playwright"
  ],
  "features": [
    {
      "name": "User Authentication",
      "description": "Sistema completo de autenticação com registro e login para três tipos de usuários: cliente, restaurante e entregador",
      "files": [
        "src/app/api/auth/register/route.ts",
        "src/app/api/auth/login/route.ts",
        "src/services/auth.service.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "paths": {
          "/api/auth/register": {
            "post": {
              "summary": "Registrar novo usuário",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"},
                        "name": {"type": "string"},
                        "phone": {"type": "string"},
                        "address": {"type": "string"},
                        "userType": {"type": "string", "enum": ["customer", "restaurant", "delivery"]},
                        "restaurantData": {"type": "object"}
                      },
                      "required": ["email", "password", "name", "userType"]
                    }
                  }
                }
              },
              "responses": {
                "201": {"description": "Usuário criado com sucesso"},
                "400": {"description": "Dados inválidos"},
                "409": {"description": "Usuário já existe"}
              }
            }
          },
          "/api/auth/login": {
            "post": {
              "summary": "Fazer login",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string"},
                        "password": {"type": "string"}
                      },
                      "required": ["email", "password"]
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Login realizado com sucesso"},
                "401": {"description": "Credenciais inválidas"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Order Management",
      "description": "Sistema completo de gerenciamento de pedidos com criação, listagem e atualização de status",
      "files": [
        "src/app/api/orders/route.ts",
        "src/app/api/orders/[id]/status/route.ts",
        "src/services/order.service.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "paths": {
          "/api/orders": {
            "get": {
              "summary": "Listar pedidos",
              "parameters": [
                {"name": "restaurantId", "in": "query", "schema": {"type": "string"}},
                {"name": "status", "in": "query", "schema": {"type": "string"}}
              ],
              "responses": {
                "200": {"description": "Lista de pedidos"},
                "401": {"description": "Token inválido"}
              }
            },
            "post": {
              "summary": "Criar novo pedido",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "restaurantId": {"type": "string"},
                        "items": {"type": "array"},
                        "deliveryAddress": {"type": "string"},
                        "paymentMethod": {"type": "string"},
                        "notes": {"type": "string"}
                      },
                      "required": ["restaurantId", "items"]
                    }
                  }
                }
              },
              "responses": {
                "201": {"description": "Pedido criado com sucesso"},
                "400": {"description": "Dados inválidos"}
              }
            }
          },
          "/api/orders/{id}/status": {
            "patch": {
              "summary": "Atualizar status do pedido",
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "status": {"type": "string", "enum": ["pending", "confirmed", "preparing", "ready", "out_for_delivery", "delivered", "cancelled"]},
                        "deliveryDriverId": {"type": "string"},
                        "estimatedDeliveryTime": {"type": "string"}
                      },
                      "required": ["status"]
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Status atualizado com sucesso"},
                "404": {"description": "Pedido não encontrado"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Menu Management",
      "description": "Sistema de gerenciamento de cardápio com CRUD completo para itens do menu",
      "files": [
        "src/app/api/menu/route.ts",
        "src/services/menu.service.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "paths": {
          "/api/menu": {
            "get": {
              "summary": "Listar itens do menu",
              "parameters": [
                {"name": "restaurantId", "in": "query", "schema": {"type": "string"}},
                {"name": "category", "in": "query", "schema": {"type": "string"}},
                {"name": "available", "in": "query", "schema": {"type": "boolean"}}
              ],
              "responses": {
                "200": {"description": "Lista de itens do menu"}
              }
            },
            "post": {
              "summary": "Criar item do menu",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "description": {"type": "string"},
                        "price": {"type": "number"},
                        "category": {"type": "string"},
                        "image": {"type": "string"},
                        "available": {"type": "boolean"}
                      },
                      "required": ["name", "price"]
                    }
                  }
                }
              },
              "responses": {
                "201": {"description": "Item criado com sucesso"},
                "403": {"description": "Acesso negado"}
              }
            },
            "put": {
              "summary": "Atualizar item do menu",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {"type": "string"},
                        "name": {"type": "string"},
                        "description": {"type": "string"},
                        "price": {"type": "number"},
                        "category": {"type": "string"},
                        "image": {"type": "string"},
                        "available": {"type": "boolean"}
                      },
                      "required": ["id", "name", "price"]
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Item atualizado com sucesso"},
                "404": {"description": "Item não encontrado"}
              }
            },
            "delete": {
              "summary": "Deletar item do menu",
              "parameters": [
                {"name": "id", "in": "query", "required": true, "schema": {"type": "string"}}
              ],
              "responses": {
                "200": {"description": "Item deletado com sucesso"},
                "404": {"description": "Item não encontrado"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Notification System",
      "description": "Sistema completo de notificações em tempo real para todos os tipos de usuários",
      "files": [
        "src/app/api/notifications/route.ts",
        "src/services/notification.service.ts",
        "src/components/NotificationSystem.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "paths": {
          "/api/notifications": {
            "get": {
              "summary": "Listar notificações do usuário",
              "parameters": [
                {"name": "unreadOnly", "in": "query", "schema": {"type": "boolean"}},
                {"name": "limit", "in": "query", "schema": {"type": "integer"}}
              ],
              "responses": {
                "200": {"description": "Lista de notificações"},
                "401": {"description": "Token inválido"}
              }
            },
            "post": {
              "summary": "Criar nova notificação",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "userId": {"type": "string"},
                        "title": {"type": "string"},
                        "message": {"type": "string"},
                        "type": {"type": "string"},
                        "data": {"type": "object"}
                      },
                      "required": ["userId", "title", "message"]
                    }
                  }
                }
              },
              "responses": {
                "201": {"description": "Notificação criada com sucesso"},
                "403": {"description": "Sem permissão"}
              }
            },
            "patch": {
              "summary": "Marcar notificações como lidas",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "notificationIds": {"type": "array", "items": {"type": "string"}},
                        "markAllAsRead": {"type": "boolean"}
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Notificações marcadas como lidas"}
              }
            },
            "delete": {
              "summary": "Deletar notificações",
              "parameters": [
                {"name": "id", "in": "query", "schema": {"type": "string"}},
                {"name": "deleteAll", "in": "query", "schema": {"type": "boolean"}}
              ],
              "responses": {
                "200": {"description": "Notificações deletadas com sucesso"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Restaurant Management",
      "description": "Sistema de gerenciamento de restaurantes com busca, filtros e categorização",
      "files": [
        "src/services/restaurant.service.ts",
        "src/types/restaurant.ts",
        "src/components/RestaurantWizard.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "paths": {
          "/api/restaurants": {
            "get": {
              "summary": "Listar restaurantes ativos",
              "parameters": [
                {"name": "category", "in": "query", "schema": {"type": "string"}},
                {"name": "search", "in": "query", "schema": {"type": "string"}},
                {"name": "promoted", "in": "query", "schema": {"type": "boolean"}}
              ],
              "responses": {
                "200": {"description": "Lista de restaurantes"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Real-time Synchronization",
      "description": "Sistema de sincronização em tempo real entre cliente, restaurante e entregador usando padrão Observer",
      "files": [
        "src/services/sync.service.ts",
        "src/hooks/useRealTimeNotifications.ts",
        "src/components/ConnectivityStatus.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Real-time Sync API",
          "description": "WebSocket-based real-time synchronization for order status updates, notifications, and cross-platform communication"
        }
      }
    }
  ]
}