{
  "meta": {
    "project": "ZipFood Delivery Platform",
    "date": "2025-09-10",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "ZipFood is a streamlined delivery marketplace platform inspired by iFood, connecting customers, restaurants, and delivery personnel through a unified, real-time web application. It features multi-language support, responsive design, and a comprehensive set of tools for user authentication, order and menu management, notifications, and real-time synchronization.",
  "core_goals": [
    "Provide a seamless and intuitive delivery marketplace experience for customers, restaurants, and delivery drivers.",
    "Ensure real-time updates and notifications across all users to maintain transparency and efficiency in the ordering and delivery process.",
    "Support multi-language interfaces including RTL support to cater to a diverse user base.",
    "Enable comprehensive management of orders, menus, and restaurants with easy-to-use dashboards tailored to each user type.",
    "Implement robust user authentication and role-based access controls for security and personalized experiences.",
    "Facilitate offline capability through mock services and optimized responsiveness across devices.",
    "Maintain a scalable and highly performant web application leveraging modern web technologies and testing practices."
  ],
  "key_features": [
    "User Authentication system supporting registration and login for customers, restaurants, and delivery personnel with secure JWT and bcryptjs integration.",
    "Order Management system including order creation, real-time status updates, and historical order tracking for all user types.",
    "Menu Management with full CRUD operations on menu items, availability control, and category filtering for restaurants.",
    "Notification System providing real-time toast notifications, persistent notification centers, badges, and internal event-based communications.",
    "Restaurant Management capabilities including search, filter, categorization, and configuration via an interactive wizard.",
    "Real-time Synchronization using WebSocket-based observer patterns to instantly sync order status, notifications, and connectivity between clients, restaurants, and delivery drivers.",
    "Multi-language support for Portuguese, English, and Hebrew (RTL) with automatic detection and seamless UI adaptation.",
    "Responsive, component-based UI leveraging React, Next.js, Tailwind CSS, Framer Motion, and Zustand for smooth animations and global state management.",
    "Robust testing infrastructure incorporating Playwright for E2E tests and AI-driven automated test cases ensuring quality and reliability."
  ],
  "user_flow_summary": [
    "User registers or logs in selecting their role: customer, restaurant, or delivery driver.",
    "Customers browse restaurants, view menus, add items to cart, place orders, and monitor order status in real-time with notifications.",
    "Restaurants configure and update their profile and menu, receive incoming orders, update order statuses, and manage sales reports.",
    "Delivery personnel mark availability, accept delivery requests, confirm pickup, update delivery progress, and complete delivery with feedback.",
    "All users receive real-time notifications corresponding to their relevant actions such as new orders, order status changes, and delivery updates.",
    "The system maintains persistent user sessions, supports multi-language toggling, and adapts UI directionality based on locale (LTR/RTL)."
  ],
  "validation_criteria": [
    "Successful registration, login, and logout flows for all user roles with proper error handling for invalid credentials or duplicate accounts.",
    "Accurate creation, updating, and retrieval of orders with real-time synchronization across all related users.",
    "Full CRUD functionality for menu items with access restricted to authorized restaurant users.",
    "Real-time notifications delivered instantly via toast and notification centers, with proper handling of read/unread statuses.",
    "Responsive UI across devices and correct rendering for all supported languages including RTL layout adjustments for Hebrew.",
    "Comprehensive Playwright E2E tests covering user authentication, order workflows, internationalization, and notification systems passing consistently.",
    "Automated AI test cases validate critical flows such as authentication, order management, real-time synchronization, and notifications.",
    "System handles offline and connectivity changes gracefully with visual indicators and data persistence where applicable."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js 15",
      "React 19",
      "Supabase",
      "PostgreSQL",
      "JWT Authentication",
      "bcryptjs",
      "TailwindCSS",
      "Zustand",
      "Framer Motion",
      "Playwright"
    ],
    "features": [
      {
        "name": "User Authentication",
        "description": "Sistema completo de autenticação com registro e login para três tipos de usuários: cliente, restaurante e entregador",
        "files": [
          "src/app/api/auth/register/route.ts",
          "src/app/api/auth/login/route.ts",
          "src/services/auth.service.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/auth/register": {
              "post": {
                "summary": "Registrar novo usuário",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "userType": {
                            "type": "string",
                            "enum": [
                              "customer",
                              "restaurant",
                              "delivery"
                            ]
                          },
                          "restaurantData": {
                            "type": "object"
                          }
                        },
                        "required": [
                          "email",
                          "password",
                          "name",
                          "userType"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Usuário criado com sucesso"
                  },
                  "400": {
                    "description": "Dados inválidos"
                  },
                  "409": {
                    "description": "Usuário já existe"
                  }
                }
              }
            },
            "/api/auth/login": {
              "post": {
                "summary": "Fazer login",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "email",
                          "password"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Login realizado com sucesso"
                  },
                  "401": {
                    "description": "Credenciais inválidas"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Order Management",
        "description": "Sistema completo de gerenciamento de pedidos com criação, listagem e atualização de status",
        "files": [
          "src/app/api/orders/route.ts",
          "src/app/api/orders/[id]/status/route.ts",
          "src/services/order.service.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/orders": {
              "get": {
                "summary": "Listar pedidos",
                "parameters": [
                  {
                    "name": "restaurantId",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "status",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Lista de pedidos"
                  },
                  "401": {
                    "description": "Token inválido"
                  }
                }
              },
              "post": {
                "summary": "Criar novo pedido",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "restaurantId": {
                            "type": "string"
                          },
                          "items": {
                            "type": "array"
                          },
                          "deliveryAddress": {
                            "type": "string"
                          },
                          "paymentMethod": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "restaurantId",
                          "items"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Pedido criado com sucesso"
                  },
                  "400": {
                    "description": "Dados inválidos"
                  }
                }
              }
            },
            "/api/orders/{id}/status": {
              "patch": {
                "summary": "Atualizar status do pedido",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "confirmed",
                              "preparing",
                              "ready",
                              "out_for_delivery",
                              "delivered",
                              "cancelled"
                            ]
                          },
                          "deliveryDriverId": {
                            "type": "string"
                          },
                          "estimatedDeliveryTime": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Status atualizado com sucesso"
                  },
                  "404": {
                    "description": "Pedido não encontrado"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Menu Management",
        "description": "Sistema de gerenciamento de cardápio com CRUD completo para itens do menu",
        "files": [
          "src/app/api/menu/route.ts",
          "src/services/menu.service.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/menu": {
              "get": {
                "summary": "Listar itens do menu",
                "parameters": [
                  {
                    "name": "restaurantId",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "category",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "available",
                    "in": "query",
                    "schema": {
                      "type": "boolean"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Lista de itens do menu"
                  }
                }
              },
              "post": {
                "summary": "Criar item do menu",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "category": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "available": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "name",
                          "price"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Item criado com sucesso"
                  },
                  "403": {
                    "description": "Acesso negado"
                  }
                }
              },
              "put": {
                "summary": "Atualizar item do menu",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "category": {
                            "type": "string"
                          },
                          "image": {
                            "type": "string"
                          },
                          "available": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "price"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Item atualizado com sucesso"
                  },
                  "404": {
                    "description": "Item não encontrado"
                  }
                }
              },
              "delete": {
                "summary": "Deletar item do menu",
                "parameters": [
                  {
                    "name": "id",
                    "in": "query",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Item deletado com sucesso"
                  },
                  "404": {
                    "description": "Item não encontrado"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Notification System",
        "description": "Sistema completo de notificações em tempo real para todos os tipos de usuários",
        "files": [
          "src/app/api/notifications/route.ts",
          "src/services/notification.service.ts",
          "src/components/NotificationSystem.tsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/notifications": {
              "get": {
                "summary": "Listar notificações do usuário",
                "parameters": [
                  {
                    "name": "unreadOnly",
                    "in": "query",
                    "schema": {
                      "type": "boolean"
                    }
                  },
                  {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Lista de notificações"
                  },
                  "401": {
                    "description": "Token inválido"
                  }
                }
              },
              "post": {
                "summary": "Criar nova notificação",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          }
                        },
                        "required": [
                          "userId",
                          "title",
                          "message"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Notificação criada com sucesso"
                  },
                  "403": {
                    "description": "Sem permissão"
                  }
                }
              },
              "patch": {
                "summary": "Marcar notificações como lidas",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "notificationIds": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "markAllAsRead": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Notificações marcadas como lidas"
                  }
                }
              },
              "delete": {
                "summary": "Deletar notificações",
                "parameters": [
                  {
                    "name": "id",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "deleteAll",
                    "in": "query",
                    "schema": {
                      "type": "boolean"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Notificações deletadas com sucesso"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Restaurant Management",
        "description": "Sistema de gerenciamento de restaurantes com busca, filtros e categorização",
        "files": [
          "src/services/restaurant.service.ts",
          "src/types/restaurant.ts",
          "src/components/RestaurantWizard.tsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "paths": {
            "/api/restaurants": {
              "get": {
                "summary": "Listar restaurantes ativos",
                "parameters": [
                  {
                    "name": "category",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "search",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "promoted",
                    "in": "query",
                    "schema": {
                      "type": "boolean"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Lista de restaurantes"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Real-time Synchronization",
        "description": "Sistema de sincronização em tempo real entre cliente, restaurante e entregador usando padrão Observer",
        "files": [
          "src/services/sync.service.ts",
          "src/hooks/useRealTimeNotifications.ts",
          "src/components/ConnectivityStatus.tsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Real-time Sync API",
            "description": "WebSocket-based real-time synchronization for order status updates, notifications, and cross-platform communication"
          }
        }
      }
    ]
  }
}
